name: deploy prod

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: |
          ls -la ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: npm install, build, and test
        run: |
          npm ci &&
          npm run build &&
          npm ci --prefix frontend &&
          npm run build --prefix frontend &&
          mkdir export &&
          mv build export/server &&
          mv frontend/.next/standalone export/frontend &&
          mkdir deploy &&
          tar --exclude='.env' --disable-copyfile --no-xattrs -czf deploy/export.tar -C export

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: deploy

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCE_SA_KEY }}'

      - id: compute-ssh
        uses: google-github-actions/ssh-compute@v1
        with:
          instance_name: 'instance-2'
          zone: 'us-central1-a'
          ssh_private_key: '${{ secrets.GCP_SSH_PRIVATE_KEY }}'
          script: '${{ github.workspace }}/deploy.sh'

      - name: push to vm
        run: |
          gcloud compute scp deploy/export.tar instance-2: 

      - id: 'Output'
        run: |-
          echo 'Output ls workspace'
          ls -la ${{ github.workspace }}
          echo '${{ steps.compute-ssh.outputs.stdout }}'
          echo '${{ steps.compute-ssh.outputs.stderr }}'
